-- MySQL Script generated by MySQL Workbench
-- Sat Dec  5 20:42:59 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema testing_system
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema testing_system
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `testing_system` DEFAULT CHARACTER SET utf8 ;
USE `testing_system` ;

-- -----------------------------------------------------
-- Table `testing_system`.`subjects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `testing_system`.`subjects` (
  `subject_id` BIGINT(64) NOT NULL AUTO_INCREMENT,
  `name` TINYTEXT NOT NULL,
  `description` MEDIUMTEXT NOT NULL,
  PRIMARY KEY (`subject_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `testing_system`.`statuses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `testing_system`.`statuses` (
  `status_id` BIGINT(64) NOT NULL AUTO_INCREMENT,
  `name` TINYTEXT NOT NULL,
  PRIMARY KEY (`status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `testing_system`.`tests`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `testing_system`.`tests` (
  `test_id` BIGINT(64) NOT NULL AUTO_INCREMENT,
  `title` TINYTEXT NOT NULL,
  `subject` BIGINT(64) NOT NULL,
  `description` MEDIUMTEXT NOT NULL,
  `status` BIGINT(64) NOT NULL,
  `points_to_pass` INT NOT NULL,
  PRIMARY KEY (`test_id`),
  INDEX `fk_tests_subjects_idx` (`subject` ASC) VISIBLE,
  INDEX `fk_tests_statuses_idx` (`status` ASC) VISIBLE,
  CONSTRAINT `fk_tests_subjects`
    FOREIGN KEY (`subject`)
    REFERENCES `testing_system`.`subjects` (`subject_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tests_statuses`
    FOREIGN KEY (`status`)
    REFERENCES `testing_system`.`statuses` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `testing_system`.`questions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `testing_system`.`questions` (
  `question_id` BIGINT(64) NOT NULL AUTO_INCREMENT,
  `text` MEDIUMTEXT NOT NULL,
  `points` INT NOT NULL,
  `test` BIGINT(64) NOT NULL,
  PRIMARY KEY (`question_id`),
  INDEX `fk_questions_tests_idx` (`test` ASC) VISIBLE,
  CONSTRAINT `fk_questions_tests`
    FOREIGN KEY (`test`)
    REFERENCES `testing_system`.`tests` (`test_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `testing_system`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `testing_system`.`roles` (
  `role_id` BIGINT(64) NOT NULL AUTO_INCREMENT,
  `name` TINYTEXT NOT NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `testing_system`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `testing_system`.`users` (
  `user_id` BIGINT(64) NOT NULL AUTO_INCREMENT,
  `username` TINYTEXT NOT NULL,
  `name` TINYTEXT NOT NULL,
  `surname` TINYTEXT NOT NULL,
  `email` VARCHAR(128) NOT NULL,
  `password_hash` VARCHAR(32) NOT NULL,
  `user_hash` VARCHAR(32) NOT NULL,
  `role` BIGINT(64) NOT NULL,
  `status` BIGINT(64) NOT NULL,
  PRIMARY KEY (`user_id`),
  INDEX `fk_users_roles_idx` (`role` ASC) VISIBLE,
  INDEX `fk_users_statuses_idx` (`status` ASC) VISIBLE,
  CONSTRAINT `fk_users_roles`
    FOREIGN KEY (`role`)
    REFERENCES `testing_system`.`roles` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_statuses`
    FOREIGN KEY (`status`)
    REFERENCES `testing_system`.`statuses` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `testing_system`.`answers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `testing_system`.`answers` (
  `answer_id` BIGINT(64) NOT NULL AUTO_INCREMENT,
  `text` TINYTEXT NOT NULL,
  `question` BIGINT(64) NOT NULL,
  `correct` TINYINT NOT NULL,
  PRIMARY KEY (`answer_id`),
  INDEX `fk_answers_questions_idx` (`question` ASC) VISIBLE,
  CONSTRAINT `fk_answers_questions`
    FOREIGN KEY (`question`)
    REFERENCES `testing_system`.`questions` (`question_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `testing_system`.`results`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `testing_system`.`results` (
  `result_id` BIGINT(64) NOT NULL AUTO_INCREMENT,
  `user` BIGINT(64) NOT NULL,
  `test` BIGINT(64) NOT NULL,
  `points` INT NOT NULL,
  `correct_answers` INT NOT NULL,
  `total_points` INT NOT NULL,
  PRIMARY KEY (`result_id`),
  INDEX `fk_results_students_idx` (`user` ASC) VISIBLE,
  INDEX `fk_results_tests_idx` (`test` ASC) VISIBLE,
  CONSTRAINT `fk_results_students`
    FOREIGN KEY (`user`)
    REFERENCES `testing_system`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_results_tests`
    FOREIGN KEY (`test`)
    REFERENCES `testing_system`.`tests` (`test_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;




INSERT INTO `testing_system`.`subjects` (`subject_id`, `name`, `description`) VALUES ('1', 'Литература', 'Предмет изучающий произведения различных жанров и стилей.');
INSERT INTO `testing_system`.`subjects` (`subject_id`, `name`, `description`) VALUES ('2', 'Основы программирования', 'Предмет изучающий программирование, его фундаментальные понятия, алгоритмы и компьютерные аспекты.');

INSERT INTO `testing_system`.`roles` (`role_id`, `name`) VALUES ('1', 'Администратор');
INSERT INTO `testing_system`.`roles` (`role_id`, `name`) VALUES ('2', 'Тьютор');
INSERT INTO `testing_system`.`roles` (`role_id`, `name`) VALUES ('3', 'Студент');

INSERT INTO `testing_system`.`statuses` (`status_id`, `name`) VALUES ('1', 'Активный');
INSERT INTO `testing_system`.`statuses` (`status_id`, `name`) VALUES ('2', 'Неактивный');
INSERT INTO `testing_system`.`statuses` (`status_id`, `name`) VALUES ('3', 'В ожидании');

INSERT INTO `testing_system`.`tests` (`test_id`, `title`, `subject`, `description`, `status`, `points_to_pass`) VALUES ('1', 'Основные понятия программирования', '1', 'Данный тест проверит ваше знание основных понятий программирования', '1', '4');
INSERT INTO `testing_system`.`tests` (`test_id`, `title`, `subject`, `description`, `status`, `points_to_pass`) VALUES ('2', 'Известные литературные авторы', '2', 'Тест покажет насколько хорошо вы знаете авторов и их произведения', '1', '3');

insert into testing_system.users (user_id, username, name, surname, email, password_hash, user_hash, role, status)
values  (1, 'supertutor', 'tutor', 'tutor', 'tutor@tutor.tutor', 'd70275426dd2afc823c68c14214478b1', '62e44894dda13d1595dab5c7dfa27f67', 2, 1),
        (2, 'vovachicken', 'Вова', 'Петухов', 'vova@vova.vova', '157b61ced8810133c2e909557197ec5f', '7f9e0218560e110ddb8ad4380f683af6', 3, 2),
        (4, 'admin', 'admin', 'admin', 'admin@admin.admin', 'a3aed78b5a40449cadb0cb5e1840aee8', 'c290cc111dded3415bd50b7aa6ae4674', 1, 1),
        (11, 'superuser', 'user', 'user', 'cebejed450@opetron.com', '05807ec2ba3f8b466e3e42aa7dd66ce8', '5cfbc2dc60220e5795e23db9a92d6044', 3, 1),
        (13, 'supervlad', 'vlad', 'orlov', 'xonef18963@tdcryo.com', '66c469ca8d8e92948ec14667ac7c1e8a', '4b1572b770c36a7bf0bca32bf8dbe5c8', 3, 1);

INSERT INTO `testing_system`.`questions` (`question_id`, `text`, `points`, `test`) VALUES ('1', 'Назовите понятие. Совокупность последовательных шагов, схема действий, приводящих к желаемому результату.', '4', '1');
INSERT INTO `testing_system`.`questions` (`question_id`, `text`, `points`, `test`) VALUES ('2', 'Назовите понятие. Комбинация компьютерных инструкций и данных, позволяющая аппаратному обеспечению вычислительной системы выполнять вычисления или функции управления.', '5', '1');
INSERT INTO `testing_system`.`questions` (`question_id`, `text`, `points`, `test`) VALUES ('3', 'Какой автор сжёг второй том \"Мёртвых душ\"?', '3', '2');
INSERT INTO `testing_system`.`questions` (`question_id`, `text`, `points`, `test`) VALUES ('4', 'Кто написал \"Войну и мир\"?', '2', '2');

INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('1', 'Алгоритм', '1', '1');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('2', 'Цикл', '1', '0');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('3', 'Интерфейс', '1', '0');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('4', 'Программа', '1', '0');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('5', 'Блок схема', '2', '0');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('6', 'Компьютерная программа', '2', '1');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('7', 'Перфокарта', '2', '0');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('8', 'Клавиатура', '2', '0');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('9', 'Лев Николаевич Толстой', '3', '0');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('10', 'Николай Васильевич Гоголь', '3', '1');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('11', 'Александр Сергеевич Пушкин', '3', '0');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('12', 'Александр Исаевич Солженицын', '3', '0');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('13', 'Александр Исаевич Солженицын', '4', '0');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('14', 'Николай Васильевич Гоголь', '4', '0');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('15', 'Лев Николаевич Толстой', '4', '1');
INSERT INTO `testing_system`.`answers` (`answer_id`, `text`, `question`, `correct`) VALUES ('16', 'Александр Сергеевич Пушкин', '4', '0');

insert into testing_system.results (result_id, user, test, points, correct_answers, total_points)
values  (2, 1, 1, 0, 0, 9),
        (3, 1, 2, 0, 0, 5),
        (4, 1, 2, 0, 0, 5),
        (5, 1, 2, 0, 0, 5),
        (6, 1, 2, 5, 2, 5),
        (11, 1, 1, 0, 0, 9),
        (12, 1, 2, 0, 0, 5),
        (13, 1, 2, 0, 0, 5),
        (14, 1, 2, 3, 1, 5),
        (16, 1, 1, 0, 0, 9),
        (17, 1, 1, 0, 0, 9),
        (18, 1, 1, 0, 0, 9),
        (20, 1, 2, 0, 0, 5),
        (21, 1, 2, 5, 2, 5),
        (22, 1, 2, 5, 2, 5),
        (24, 4, 1, 5, 1, 9),
        (25, 11, 2, 5, 2, 5),
        (26, 13, 2, 0, 0, 5);